AC_INIT()

AC_PROG_CXX
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_INSTALL


AC_CANONICAL_SYSTEM

case "${target_os}" in
  darwin*)
    echo ===========================================================
    echo Setting up build environment for ${target_cpu}${target_os}
    echo ===========================================================
    target_os=osx
    CXXFLAGS="${CXXFLAGS} -DOS_MACOSX"
    LDLIBS="${LDLIBS} -framework Carbon"
    AC_SUBST(EXTRA_PROGS)
    ;;
  *linux*)
    echo ===========================================================
    echo Setting up build environment for ${target_cpu}${target_os}
    echo ===========================================================
    target_os=xlib
    CXXFLAGS="${CXXFLAGS} -DOS_LINUX"
    ;;
  *)
    echo ===========================================================
    echo Setting up build environment for ${target_cpu}${target_os}
    echo ===========================================================
    AC_MSG_ERROR([ "Unsupported target operating system, please correct" ])
  esac


AM_INIT_AUTOMAKE("hpc-clust","1.0.0")

## Check for eutils library
#AC_CHECK_LIB(eutils,main)
#AM_PATH_EUTILS


AC_CHECK_LIB(z,main)

AC_CHECK_LIB(pthread,main)

AM_CONFIG_HEADER(config.h)
AX_PREFIX_CONFIG_H

## if eutils is installed on the system do not use the included version
#if test "x$no_eutils" = xyes; then
  AC_CONFIG_SUBDIRS([eutils])
#fi

LIBS="${LIBS} ${EUTILS_LIBS}"
LDFLAGS="${LDFLAGS} ${EUTILS_LDFLAGS}"

AC_ARG_WITH(mpi, [  --without-mpi    disable MPI library. ], ,with_mpi="yes" )
if test "x$with_mpi" != "x"; then
  AC_CHECK_LIB(mpi,main,[mpilib_exists=1])
  if test "x$mpilib_exists" != "x"; then
    echo "Compiling MPI library support"
    AC_DEFINE_UNQUOTED(HAVE_MPILIB,1,[define when MPI library exists])
  fi
fi
AM_CONDITIONAL(HAVE_MPILIB, test "x$mpilib_exists" != "x")

AC_SUBST(EUTILS_CXXFLAGS)
AC_SUBST(EUTILS_LDFLAGS)
AC_SUBST(EUTILS_LIBS)


AC_CONFIG_FILES(Makefile)

AC_OUTPUT
