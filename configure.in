AC_INIT()

AC_PROG_CXX
AC_PROG_CC
AC_PROG_RANLIB
AC_PROG_INSTALL


AC_CANONICAL_SYSTEM

case "${target_os}" in
  darwin*)
    echo ===========================================================
    echo Setting up build environment for ${target_cpu}${target_os}
    echo ===========================================================
    target_os=osx
    CXXFLAGS="${CXXFLAGS} -DOS_MACOSX"
    LDLIBS="${LDLIBS} -framework Carbon"
    AC_SUBST(EXTRA_PROGS)
    ;;
  *linux*)
    echo ===========================================================
    echo Setting up build environment for ${target_cpu}${target_os}
    echo ===========================================================
    target_os=xlib
    CXXFLAGS="${CXXFLAGS} -DOS_LINUX"
    ;;
  *)
    echo ===========================================================
    echo Setting up build environment for ${target_cpu}${target_os}
    echo ===========================================================
    AC_MSG_ERROR([ "Unsupported target operating system, please correct" ])
  esac


AM_INIT_AUTOMAKE("hpc-clust","1.0.0")

## Check for eutils library
#AC_CHECK_LIB(eutils,main)
#AM_PATH_EUTILS


AC_CHECK_LIB(z,main)

AC_CHECK_LIB(pthread,main)

AM_CONFIG_HEADER(config.h)
AX_PREFIX_CONFIG_H

## if eutils is installed on the system do not use the included version
#if test "x$no_eutils" = xyes; then
  AC_CONFIG_SUBDIRS([eutils])
#fi

LIBS="${LIBS} ${EUTILS_LIBS}"
LDFLAGS="${LDFLAGS} ${EUTILS_LDFLAGS}"

AC_ARG_WITH(mpi,[  --without-mpi      disable MPI support. ],,with_mpi=yes)

AC_CHECK_LIB(mpi,main,,no_mpi=yes)
if test "x$no_mpi" != "xyes"; then
  AC_CHECK_HEADER([mpi.h],,no_mpi=yes)
  if test "x$no_mpi" = "xyes"; then
    no_mpi=""
    AC_CHECK_HEADER([mpi/mpi.h],,no_mpi=yes)
    if test "$x$no_mpi" != "xyes"; then
      CXXFLAGS="${CXXFLAGS} -I/usr/include/mpi"
    fi
  fi
fi
if test "x$no_mpi" = "xyes" -a "x$with_mpi" = "xyes"; then
  AC_MSG_ERROR([
*** MPI library not found.
*** If you do NOT need MPI support uou can explicitly disable it with ./configure --without-mpi.
*** If you want MPI support, you can try installing it using the package manager in your system.
*** For example: apt-get install libopenmpi (on Debian, Ubuntu, ...), or yum install openmpi (on Redhat, Rocks, ...).
*** If you know that the MPI library is installed, please make sure that the libmpi.a library can be found in /usr/lib, and that the mpi.h header can be found in /usr/include.
*** If the files exist elsewhere please use ./configure CXXFLAGS="-I/include/path/to/mpi.h_directory/" and LDFLAGS="-L/library/path/to/libmpi.a_directory/", or create symbolic links to the correct files in the /usr/include and /usr/lib directories.])
fi
if test "x$no_mpi" != "xyes" -a "x$with_mpi" = "xyes"; then
  echo "Compiling MPI library support"
  AC_DEFINE_UNQUOTED(HAVE_MPILIB,1,[define when MPI library exists])
  LIBS="$LIBS -lmpi"
fi
AM_CONDITIONAL(HAVE_MPILIB, test "x$no_mpi" = "x" -a "x$with_mpi" = "xyes")

AC_SUBST(EUTILS_CXXFLAGS)
AC_SUBST(EUTILS_LDFLAGS)
AC_SUBST(EUTILS_LIBS)


AC_CONFIG_FILES(Makefile)

AC_OUTPUT
